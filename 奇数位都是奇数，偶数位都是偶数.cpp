//给定一个长度不小于2的数组arr。 写一个函数调整arr，使arr中要么所有的偶数位上都是偶数，要么所有的奇数位上都是奇数上。 
//要求：如果数组长度为N，时间复杂度请达到O(N)，额外空间复杂度请达到O(1),
//下标0, 2, 4, 6...算作偶数位, 下标1, 3, 5, 7...算作奇数位，例如[1, 2, 3, 4]调整为[2, 1, 4, 3]即可

#if 0

#include<vector>
#include<iostream>
#include<algorithm>
using namespace std;

void oddInOddEvenInEven(vector<int>& arr, int len) 
{
	int i = 0, j = 1;
	while (i < len && j < len)
	{
		//判断偶数位是否是偶数，若不为偶数则停下
		while (i < len && (arr[i] % 2) == 0) i += 2;
		//判断奇数位是否是奇数，若不是奇数则停下
		while (j < len && (arr[j] % 2) != 0) j += 2;
		//将这两个数字进行位置替换
		if(i < len && j < len)
			swap(arr[i], arr[j]);
	}
}

int main()
{
	int arr[] = { 7, 7, 9, 5, 1, 6, 7, 9, 3, 2, 6 };
	vector<int> vec(arr, arr + 11);
	oddInOddEvenInEven(vec, 11);
	return 0;
}
#endif